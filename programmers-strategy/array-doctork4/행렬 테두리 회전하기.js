function solution(rows, columns, queries) {
  const matrix = makeMatrix(rows, columns);
  return answer;
}

// 1. r * c 행렬을 만든다. 
function makeMatrix(row, col) {
  
  
}

// 2. queries에 들어있는 배열들에게 회전 로직을 적용한다. 
/**

<회전 로직>
- 회전할 사각형을 찾는다. 
- 그 중 최솟값을 찾는다. 
- 좌 -> 하 -> 우 -> 상 변 순으로 회전을 시킨다. 
  - 이 때, 가장 왼쪽 상단에 있던 숫자는 자연스럽게 지워진다. 
  - 회전 전에 temp 변수에 저장해두었다가 회전을 모두 마치고 마지막에 수기로 바꿔준다. 

temp
x1, y1에 있는 값으로 지정해둔다.

좌변 회전 로직 
x1 , y1 - 1 부터 ~ y1까지 
바로 위로 끌어올린다.

하변 회전 로직
x2, y1부터 ~ x1+1까지
왼쪽으로 민다.

우변 회전 로직
x2, y1 -1부터 ~  y1까지
아래쪽으로 끌어 당긴다.

상변 회전로직
x1+1, y1 부터 ~ x2까지 
오른쪽으로 민다.

최솟값 검사
- 처음 시작 값은 x1, y1 값으로 해둔다. 
- 회전 로직을 돌 때 각 값과 임시 최소값과 비교하여 더 작은 값을 최솟값으로 지정한다. 
- 회전 로직을 마치고 temp 값을 x1+1, y1에 지정하면, 최솟값을 전체 함수에서 return 한다.

 */

